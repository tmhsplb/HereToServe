
@{
    ViewBag.Title = "Clients";
    Layout = "~/Views/Shared/_FrontDesk.cshtml";
    // See this link for highlighting a row whose client has history
    // https://stackoverflow.com/questions/3908171/jqgrid-change-row-background-color-based-on-condition
}

<br /><br /><br />
<h2>@ViewBag.ServiceDate</h2>
<br />

<div>
    <table id="clientsGrid"></table>
    <div id="clientsPager"></div>
</div>


<link href="@Url.Content("~/Content/jquery.jqGrid/copied.ui.jqgrid.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/i18n/grid.locale-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.jqGrid.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var lastServed = 0;
    var rowsToColor = [];

    $("#clientsGrid").jqGrid({
        url: "@Url.Action("GetClients", "FrontDesk")",
        datatype: "json",
        pageable: true,
        mtype: "Get",
        colNames: ['Id', 'ST', 'WT', 'Stage', 'H', 'Last Name', 'First Name', 'Middle Name', 'Birth Name', 'DOB', 'Age', @*'EXP', 'HIS',*@ 'ACK', 'XID', 'XBC', 'Notes'],
        colModel: [
        { key: true, hidden: true, name: 'Id', index: 'Id' },
        { key: false, align: 'center', name: 'ServiceTicket', index: 'ServiceTicket', width: 50, editable: true, sortable: true, search: false },
        { key: false, align: 'center', name: 'WaitTime', index: 'WaitTime', width: 50, formatter: rowColorFormatter, editable: false, sortable: true, search: false },
        { key: false, name: 'Stage', index: 'Stage', width: 100, editable: true, edittype: 'select', editoptions: { value: { 'Screened': 'Screened', 'CheckedIn': 'CheckedIn', 'Interviewing': 'Interviewing', 'Interviewed': 'Interviewed', 'BackOffice': 'BackOffice', 'Done': 'Done' } }, sortable: false, search: false },
        { key: false, name: 'HeadOfHousehold', index: 'HeadOfHousehold', width: 35, align: 'center', editable: false, sortable: false, search: false },
        { key: false, name: 'LastName', index: 'LastName', width: 150, editable: true, sortable: false, search: false },
        { key: false, name: 'FirstName', index: 'FirstName', width: 150, editable: true, sortable: false, search: false },
        { key: false, name: 'MiddleName', index: 'MiddleName', width: 150, editable: true, sortable: false, search: false },
        { key: false, name: 'BirthName', index: 'BirthName', width: 150, editable: true, sortable: false, search: false },
        { key: false, align: 'center', name: 'DOB', index: 'DOB', width: 100, editable: true, sortable: true, search: false },
        { key: false, align: 'center', name: 'Age', index: 'Age', width: 50, editable: false, sortable: false, search: false },
       @* { name: 'EXP', index: 'EXP', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''", defaultValue: 'Y'} }, *@
       @* { name: 'History', index: 'History', align: 'center', width: 50, editable: false, sortable: false, search: false }, *@
        { name: 'PND', index: 'PND', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" }, },
        { name: 'XID', index: 'XID', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" } },
        { name: 'XBC', index: 'XBC', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" }, },
        { key: false, name: 'Notes', index: 'Notes', width: 150, editable: true, sortable: false, search: false, edittype: 'textarea', editoptions: { rows: '2', columns: '10' }  }
        ],
        pager: '#clientsPager',
        rowNum: 25,

        onSelectRow: function (nowServing) {
            if (nowServing == null || nowServing == lastServed) {
                // Prevent infinite recursion caused by reloadGrid
                //alert("nowServing is null or nowServing == lastServed!");
            } else {
                lastServed = nowServing;
                jQuery("#clientsGrid").jqGrid('setGridParam',
                    {
                        postData: { nowServing: nowServing },
                        url: "@Url.Action("NowServing", "FrontDesk")"
                    }).trigger('reloadGrid', { fromServer: true }).jqGrid('setSelection', nowServing, true);
            }
        },

        height: "100%",
        viewrecords: true,
        loadonce: false,

        gridComplete: function () {
            for (var i = 0; i < rowsToColor.length; i++) {
                  //  alert("colored row: " + rowsToColor[i]);
                  $("#" + rowsToColor[i].rowId).css("color", rowsToColor[i].rowColor)
            }
        },

        caption: 'Clients',
        emptyrecords: 'No records to display',
        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records",
            repeatitems: false,
            id: "Id"
        },
        autowidth: true,
        multiselect: false,

        subGrid: true,
        subGridRowExpanded: function (subgrid_id, row_id) {
            var subgrid_table_id, pager_id;
            subgrid_table_id = subgrid_id + "t";
            pager_id = "p_" + subgrid_table_id;
            $("#" + subgrid_id).html("<table id='" + subgrid_table_id + "' class='scroll'></table><div id='" + pager_id + "' class='scroll'></div>");
            jQuery("#" + subgrid_table_id).jqGrid({
                postData: { id: function () { /* alert("id of expanded row = " + row_id); */ return row_id } },  // the secret to getting the row id in the post!
                url: "@Url.Action("GetDependents", "FrontDesk")",
                datatype: "json",
                mtype: 'post',
                editurl: "@Url.Action("Dummy", "FrontDesk")",
                cellsubmit: 'clientArray',
                colNames: ['Id', 'First Name', 'Middle Name', 'Last Name', 'Birth Name', 'DOB', 'Age', 'ACK', 'XID', 'XBC', 'Notes'],
                colModel: [
                    { key: true, hidden: true, name: 'Id', index: 'Id', editable: true },
                    { key: false, name: 'FirstName', index: 'FirstName', width: 100, editable: true },        
                    { key: false, name: 'MiddleName', index: 'MiddleName', width: 100, editable: true },
                    { key: false, name: 'LastName', index: 'LastName', width: 100, editable: true },
                    { key: false, name: 'BirthName', index: 'BirthName', width: 100,  editable: true, sortable: false, search: false },
                    { key: false, name: 'DOB', index: 'DOB', width:100, editable: true },
                    { key: false, align: 'center', name: 'Age', index: 'Age', width: 50, editable: false, sortable: false, search: false },
                    { name: 'PND', index: 'PND', align: 'center', width: 35, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" }, },
                    { name: 'XID', index: 'XID', align: 'center', width: 35, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" } },
                    { name: 'XBC', index: 'XBC', align: 'center', width: 35, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" }, },
                    { key: false, name: 'Notes', index: 'Notes', width: 150, sortable: false, editable: true, edittype: 'textarea', editoptions: { rows: '2', columns: '10' } }
                ],
                rowNum: 10,
                pager: pager_id,
                onSelectRow: function (nowServing) {
                    // alert("subgrid nowServing = " + nowServing);
                    if (nowServing == null || nowServing == lastServed) {
                      // Prevent infinite recursion caused by reloadGrid
                    } else {
                        lastServed = nowServing;
                        jQuery("#clientsGrid").jqGrid('setGridParam',
                            {
                                postData: { nowServing: nowServing }, 
                                url: "@Url.Action("NowServing", "FrontDesk")"
                             }).trigger('reloadGrid', { fromServer: true }).jqGrid('setSelection', nowServing, true);
                    }
                },
                height: '100%',
                // https://stackoverflow.com/questions/3213984/jqgrid-giving-exception-when-json-is-attempted-to-be-loaded
                jsonReader: { repeatitems: false }
            });

            // Insert jquery("#" + subgrid_table_id).jqgrid('navGrid', ...  )  HERE
            jQuery("#" + subgrid_table_id).jqGrid('navGrid', "#" + pager_id, { edit: true, add: false, del: false, search: false, refresh: false },
             {
                zIndex: 100,
                url: "@Url.Action("EditDependentClient", "FrontDesk")",
                closeOnEscape: true,
                closeAfterEdit: true,
                recreateForm: true,
                afterComplete: function (response) {
                    if (response.responseText) {
                     //   alert("Edited dependent client: " + response.responseText);
                    }
                }
             }
            )  
        } // close subgridRowExpanded
    })

    jQuery("#clientsGrid").jqGrid('navGrid', '#clientsPager', { edit: true, add: true, del: true, search: false, refresh: false },
      {
          zIndex: 100,
          url: "@Url.Action("EditClient", "FrontDesk")",
          closeOnEscape: true,
          closeAfterEdit: true,
          recreateForm: true,

          afterComplete: function (response) {
              if (response.responseText) {
                //  alert("FrontDesk: " + response.responseText);
              }
          }
      },
      {
          zIndex: 100,
          url: "@Url.Action("AddClient", "FrontDesk")",
          closeOnEscape: true,
          closeAfterAdd: true,
          recreateForm: true,
          afterComplete: function (response) {
              if (response.responseText) {
                  if (response.responseText != "Success") {
                      alert(response.responseText);
                  }
              }
          }
      },
      {
          zIndex: 100,
          url: "@Url.Action("DeleteClient", "FrontDesk")",
          closeOnEscape: true,
          closeAfterDelete: true,
          recreateForm: true,
          afterComplete: function (response) {
              if (response) {
                  // alert(response.responseText);
              }
          }
      });

    // See: https://stackoverflow.com/questions/3908171/jqgrid-change-row-background-color-based-on-condition
    function rowColorFormatter(cellValue, options, rowObject) {
        if (cellValue > 30 && cellValue < 45) {
            rowsToColor[rowsToColor.length] = { rowId: rowObject.Id, rowColor: "LightPink" };
        } else if (cellValue > 45 && cellValue < 60) {
            rowsToColor[rowsToColor.length] = { rowId: rowObject.Id, rowColor: "HotPink" };
        } else if (cellValue > 60) {
            rowsToColor[rowsToColor.length] = { rowId: rowObject.Id, rowColor: "Red" };
        }
        return cellValue;
    }

    // http://www.trirand.com/blog/?page_id=393/help/how-to-use-add-form-dialog-popup-window-set-position
    $.extend($.jgrid.edit, {
        recreateForm: true,
        closeAfterAdd: true,
        dataheight: '100%',
        reloadAfterSubmit: true,
        width: 500,
        top: 300,
        left: 450,
        addCaption: "Add Client",
        editCaption: "Edit Client",
        bSubmit: "Submit",
        bCancel: "Cancel",
        bClose: "Close",
        saveData: "Data has been changed! Save changes?",
        bYes: "Yes",
        bNo: "No",
        bExit: "Cancel"
    });
</script>

<br /><br /><br />
<table>
    <tr>
        <td><a class="button" href="@Url.Action("PrehistoricChecks", "Frontdesk")">Prehistoric Checks</a></td>
        <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td><a class="button" href="@Url.Action("UpdateClientView", "Frontdesk")">Update Client View</a></td>
        <td>&nbsp;&nbsp;&nbsp;&nbsp;</td>
        <td><a class="button" href="@Url.Action("ClearClientView", "Frontdesk")">Clear Client View</a></td>
    </tr>
</table>

<script type="text/javascript" src="@Url.Content("~/Scripts/jquery.signalR-2.4.1.min.js")"></script>

<script type="text/javascript" src="~/signalr/hubs"></script>

<script>
    $(function () {
        var theHub = $.connection.dailyHub;

        theHub.client.refreshPage = function () {
            var currentPage = jQuery("#clientsGrid").jqGrid('getGridParam', 'page');
           // alert("currentPage = " + currentPage)
            var url = "@Url.Action("GetClients", "FrontDesk", new { page = "pageToken", rows = "rowsToken" })";

            url = url.replace("pageToken", currentPage);
            url = url.replace("rowsToken", 25);
           // alert("url = " + url);

            $.ajax({
                url: url,
                cache: false,
                dataType: "json",
                success: function (data) {
                    var mygrid = jQuery("#clientsGrid")[0];
                    mygrid.addJSONData(data);
                }
             });
        };

        $.connection.hub.start().done(function () {
        });
    });
</script>

