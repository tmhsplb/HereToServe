@using OPIDDaily.Models
@model DatePickerViewModel

@{
    ViewBag.Title = "Clients";
    Layout = "~/Views/Shared/_Superadmin.cshtml";
    // See this link for highlighting a row whose client has history
    // https://stackoverflow.com/questions/3908171/jqgrid-change-row-background-color-based-on-condition
}


<script src="@Url.Content("~/Scripts/jquery-ui-1.10.0.min.js")">
</script>

<link rel="stylesheet" href="@Url.Content("~/Content/themes/base/jquery.ui.datepicker.css")">


<script>
    $(function () {
        $("#datepicker").datepicker();
    });
</script>

<br /><br />
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("ChangeServiceDate", "Superadmin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(m => m.datepicker, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.datepicker, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.datepicker, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>
 
<br />
<h2>@ViewBag.ServiceDate</h2>
<br />

<div>
    <table id="clientsGrid"></table>
    <div id="clientsPager"></div>
</div>


<link href="@Url.Content("~/Content/jquery.jqGrid/copied.ui.jqgrid.css")" rel="stylesheet" />

<script src="@Url.Content("~/Scripts/i18n/grid.locale-en.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.jqGrid.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    var lastServed = 0;
    var rowsToColor = [];

    $("#clientsGrid").jqGrid({
        url: "@Url.Action("GetClients", "Superadmin")",
        datatype: "json",
        pageable: true,
        mtype: "Get",
        colNames: ['Id', 'ST', 'WT', 'Stage','Last Name', 'First Name', 'Middle Name', 'Birth Name', 'DOB', 'Age', 'PND', 'XID', 'XBC', 'HIS', 'Notes'],
        colModel: [
        { key: true, hidden: true, name: 'Id', index: 'Id' },
        { key: false, align: 'center', name: 'ServiceTicket', index: 'ServiceTicket', width: 50, editable: true, sortable: true, search: false },
        { key: false, align: 'center', name: 'WaitTime', index: 'WaitTime', width: 50, formatter: rowColorFormatter, editable: false, sortable: true, search: false },
        { key: false, name: 'Stage', index: 'Stage', width: 100, editable: true, edittype: 'select', editoptions: { value: { 'Screened': 'Screened', 'CheckedIn': 'CheckedIn', 'Interviewing' : 'Interviewing', 'Interviewed' : 'Interviewed', 'BackOffice' : 'BackOffice', 'Done' : 'Done' } }, sortable: false, search: false },
        { key: false, name: 'LastName', index: 'LastName', width: 150, editable: true, sortable: false, search: false },
        { key: false, name: 'FirstName', index: 'FirstName', width: 150, editable: true, sortable: false, search: false },
        { key: false, name: 'MiddleName', index: 'MiddleName', width: 150, editable: true, sortable: false, search: false },
        { key: false, name: 'BirthName', index: 'BirthName', width: 150, editable: true, sortable: false, search: false },
        { key: false, align: 'center', name: 'DOB', index: 'DOB', width: 100, editable: true, sortable: true, search: false },
        { key: false, align: 'center', name: 'Age', index: 'Age', width: 50, editable: false, sortable: false, search: false },
        { name: 'PND', index: 'PND', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" }, },
        { name: 'XID', index: 'XID', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" } },
        { name: 'XBC', index: 'XBC', align: 'center', width: 50, editable: true, edittype: "checkbox", editoptions: { value: "Y:''" }, },
        { name: 'History', index: 'History', align: 'center', width: 50, editable: false, sortable: false, search: false },
        { key: false, name: 'Notes', index: 'Notes', width: 150, editable: true, sortable: false, search: false, edittype: 'textarea', editoptions: { rows: '2', columns: '10' }  }
        ],
        pager: '#clientsPager',
        rowNum: 25,

        onSelectRow: function (nowServing) {
            if (nowServing == null || nowServing == lastServed) {
                // Prevent infinite recursion caused by reloadGrid
                //alert("nowServing is null or nowServing == lastServed!");
            } else {
                lastServed = nowServing;
                jQuery("#clientsGrid").jqGrid('setGridParam',
                    {
                        postData: { nowServing: nowServing },
                        url: "@Url.Action("NowServing", "Superadmin")"
                    }).trigger('reloadGrid', { fromServer: true }).jqGrid('setSelection', nowServing, true);
            }
        },

        height: "100%",
        viewrecords: true,
        loadonce: false,

        gridComplete: function () {
            for (var i = 0; i < rowsToColor.length; i++) {
                  //  alert("colored row: " + rowsToColor[i]);
                  $("#" + rowsToColor[i].rowId).css("color", rowsToColor[i].rowColor)
            }
        },

        caption: 'Clients',
        emptyrecords: 'No records to display',
        jsonReader: {
            root: "rows",
            page: "page",
            total: "total",
            records: "records",
            repeatitems: false,
            id: "Id"
        },
        autowidth: true,
        multiselect: false
    })

    jQuery("#clientsGrid").jqGrid('navGrid', '#clientsPager', { edit: false, add: false, del: false, search: false, refresh: true });

    // See: https://stackoverflow.com/questions/3908171/jqgrid-change-row-background-color-based-on-condition
    function rowColorFormatter(cellValue, options, rowObject) {
        if (cellValue > 10 && cellValue < 15) {
            rowsToColor[rowsToColor.length] = { rowId: rowObject.Id, rowColor: "LightPink" };
        } else if (cellValue > 15 && cellValue < 20) {
            rowsToColor[rowsToColor.length] = { rowId: rowObject.Id, rowColor: "HotPink" };
        } else if (cellValue > 20) {
            rowsToColor[rowsToColor.length] = { rowId: rowObject.Id, rowColor: "Red" };
        }
        return cellValue;
    }

</script>

 

